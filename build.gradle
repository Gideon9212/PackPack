apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

group 'org.example'
version '1.0-SNAPSHOT'

compileJava {
    options.compilerArgs += ['--enable-preview']
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += "--enable-preview"
}

tasks.withType(Test).configureEach {
    jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += "--enable-preview"
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'net.dv8tion:JDA:5.0.0-beta.13'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.json:json:20230227'
    implementation 'org.jetbrains:annotations:22.0.0'
    implementation 'org.jcodec:jcodec:0.2.5'
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'commons-io:commons-io:20030203.000550'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.httpcomponents:httpmime:4.5.13'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'
    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

jar {
    from {
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes 'Main-Class': 'mandarin.mandarin.packpack.PackBot'
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}
buildscript {
    ext.kotlin_version = '1.9.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
